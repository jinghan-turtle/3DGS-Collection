{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"Background","text":"<p>OTA\uff08Over-The-Air\uff09\u662f\u6307\u901a\u8fc7\u65e0\u7ebf\u7f51\u7edc\u5bf9\u8bbe\u5907\u8fdb\u884c\u8fdc\u7a0b\u66f4\u65b0\u6216\u5347\u7ea7\u7ef4\u62a4\u7684\u6280\u672f\uff0c\u76ee\u524d\u8282\u5361\u7684 OTA \u5df2\u7ecf\u5b8c\u6210\u4e86\u90e8\u5206\u5de5\u4f5c\u3002\u6700\u7ec8\u76ee\u6807\u662f\u80fd\u901a\u8fc7 OTA \u5e73\u53f0\u9884\u6d4b\u51fa\u673a\u5668\u4eba\u7684\u5269\u4f59\u5bff\u547d\u53ca\u72b6\u6001\uff0c\u4ece\u800c\u5728\u673a\u5668\u4eba\u53d1\u751f\u6545\u969c\u4e4b\u524d\u63d0\u524d\u62a5\u5907\uff0c\u907f\u514d\u7ec8\u7aef\u5ba2\u6237\u4ea7\u7ebf\u7684\u635f\u5931\u3002</p>"},{"location":"3DGS/3DGS/","title":"3D Gaussian Splatting","text":"<p>3DGS \u662f\u57fa\u4e8e Splatting \u548c\u673a\u5668\u5b66\u4e60\u7684\u4e09\u7ef4\u91cd\u5efa\u65b9\u6cd5\u3002\u5176\u4e2d Splat \u662f\u62df\u58f0\u8bcd\uff0c\u610f\u4e3a\u201c\u556a\u53fd\u4e00\u58f0\u201d\uff1a\u6211\u4eec\u53ef\u4ee5\u60f3\u8c61\u4e09\u7ef4\u573a\u666f\u91cd\u5efa\u7684\u8f93\u5165\u662f\u4e00\u4e9b\u96ea\u7403\uff0c\u56fe\u7247\u662f\u4e00\u9762\u7816\u5899\uff0c\u56fe\u50cf\u751f\u6210\u8fc7\u7a0b\u5c31\u662f\u5411\u5899\u9762\u6254\u96ea\u7403\u7684\u8fc7\u7a0b\uff1b\u6bcf\u6254\u4e00\u4e2a\u96ea\u7403\uff0c\u5899\u9762\u4e0a\u4f1a\u7559\u6709\u5370\u8bb0\uff0c\u540c\u65f6\u4f1a\u6709\u556a\u53fd\u4e00\u58f0\uff0c\u6240\u4ee5\u8fd9\u4e2a\u7b97\u6cd5\u4e5f\u88ab\u79f0\u4e3a\u629b\u96ea\u7403\u6cd5\uff0c\u7ffb\u8bd1\u6210\u201c\u55b7\u6e85\u201d\u4e5f\u5f88\u6709\u7075\u6027\u3002\u6240\u4ee5 splatting \u7684\u6838\u5fc3\u6709\u4e09\u6b65\uff1a\u4e00\u662f\u9009\u62e9\u201c\u96ea\u7403\u201d\uff0c\u4e5f\u5c31\u662f\u8bf4\u6211\u8981\u5c06\u5b83\u634f\u6210\u4e00\u4e2a\u4ec0\u4e48\u5f62\u72b6\u7684\u96ea\u7403\uff1b\u4e8c\u662f\u53bb\u629b\u63b7\u96ea\u7403\uff0c\u5c06\u9ad8\u65af\u692d\u7403\u4ece3D\u6295\u5f71\u52302D\uff0c\u5f97\u5230\u5f88\u591a\u4e2a\u5370\u8bb0\uff1b\u4e09\u5219\u5408\u6210\u8fd9\u4e9b\u5370\u8bb0\u4ee5\u5f62\u6210\u6700\u540e\u7684\u56fe\u50cf\u3002</p>"},{"location":"3DGS/3DGS/#_1","title":"\u634f\u96ea\u7403\uff1a\u5229\u7528\u534f\u65b9\u5dee\u63a7\u5236\u692d\u7403\u5f62\u72b6","text":"<p>\u5176\u5b9e\u6211\u4eec\u7684\u8f93\u5165\u662fSfM\u5f97\u5230\u7684\u7a00\u758f\u70b9\u4e91\uff0c\u800c\u7531\u4e8e\u70b9\u662f\u6ca1\u6709\u4f53\u79ef\u7684\uff0c\u6211\u4eec\u9996\u5148\u9700\u8981\u5c06\u70b9\u81a8\u80c0\u6210\u6b63\u65b9\u4f53\u3001\u7403\u4f53\u6216\u8005\u63d0\u53d6\u57fa\u7840\u7684\u4e09\u7ef4\u51e0\u4f55\u5f62\u72b6\uff0c\u800c\u6211\u4eec\u4e4b\u6240\u4ee5\u9009\u62e9\u9ad8\u65af\u5206\u5e03\u4f5c\u4e3a\u692d\u7403\uff0c\u5219\u662f\u56e0\u4e3a\u5b83\u826f\u597d\u7684\u6570\u5b66\u6027\u8d28\uff0c\u6bd4\u5982\u9ad8\u65af\u5206\u5e03\u5728\u4eff\u5c04\u53d8\u6362\u540e\u4f9d\u7136\u662f\u9ad8\u65af\u5206\u5e03\uff0c\u800c\u6cbf\u7740\u67d0\u4e2a\u8f74\u79ef\u5206\u5c06\u9ad8\u65af\u5206\u5e03\u4ece3D\u964d\u52302D\u540e\u5176\u4f9d\u7136\u670d\u4ece\u9ad8\u65af\u5206\u5e03\u3002\u9ad8\u65af\u5206\u5e03\u7684\u6570\u5b66\u63cf\u8ff0\u5982\u4e0b\uff0c\u7b2c\u4e8c\u4e2a\u7b49\u53f7\u7ed9\u51fa\u4e86\u4e09\u7ef4\u60c5\u5f62\u7684\u5c55\u5f00\u5f0f\u3002</p> \\[ \\small G(x;\\mu,\\Sigma) = \\cfrac{1}{\\sqrt{(2\\pi)^k|\\Sigma|}}exp\\bigg(-\\frac{1}{2}(x-\\mu)^T\\Sigma^{-1}(x-\\mu)\\bigg) = \\cfrac{1}{\\sqrt{(2\\pi)^k|\\Sigma|}}\\exp\\Bigg(-\\frac{1}{2}\\bigg(\\frac{(x-\\mu_1)^2}{\\sigma_1^2}+\\frac{(y-\\mu_2)^2}{\\sigma_2^2}+\\frac{(z-\\mu_3)^2}{\\sigma_3^2}-\\frac{2\\sigma_{xy}(x-\\mu_1)(y-\\mu_2)}{\\sigma_1\\sigma_2}-\\frac{2\\sigma_{xz}(x-\\mu_1)(z-\\mu_3)}{\\sigma_1\\sigma_3}-\\frac{2\\sigma_{yz}(y-\\mu_2)(z-\\mu_3)}{\\sigma_2\\sigma_3}\\bigg)\\Bigg) \\] <p>\u540c\u65f6\uff0c\u4efb\u610f\u692d\u7403\u90fd\u53ef\u4ee5\u7531\u67d0\u4e2a\u692d\u7403\u901a\u8fc7\u901a\u8fc7\u4eff\u5c04\u53d8\u6362\u5f97\u5230\uff0c\u800c\u5176\u4e2d\u4eff\u5c04\u53d8\u6362\u5de6\u4e58\u7684\u77e9\u9635 \\(\\small A\\)\u53ef\u4ee5\u89c6\u4e3a\u65cb\u8f6c\u548c\u7f29\u653e\u8fd9\u4e24\u4e2a\u4f5c\u7528\u7684\u5408\u6210\uff0c\u5373 \\(\\small A=RS\\)\uff1a</p> \\[ \\small w = Ax+b = RSx+b,\\thinspace x\\sim N(\\mu,\\Sigma) \\thinspace\\thinspace\\Longrightarrow\\thinspace\\thinspace w\\sim N(A\\mu+b, A\\Sigma A^T) = N(A\\mu+b, RS\\Sigma S^TR^T) \\] <p>\u7279\u522b\u5730\uff0c\u5f53 \\(\\small x\\) \u670d\u4ece\u6807\u51c6\u6b63\u6001\u5206\u5e03\u65f6\uff0c\u4eff\u5c04\u53d8\u6362\u5f97\u5230\u7684\u534f\u65b9\u5dee\u77e9\u9635\u4e3a \\(\\small RSS^TR^T\\)\uff1b\u53cd\u8fc7\u6765\uff0c\u7ed9\u5b9a\u534f\u65b9\u5dee\u77e9\u9635 \\(\\small\\Sigma\\)\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u7279\u5f81\u503c\u5206\u89e3\u5f97\u5230 \\(\\small R\\) \u548c \\(\\small S\\)\uff0c\u5373 \\(\\small\\Sigma=Q\\wedge Q^T=Q\\wedge^{1/2}\\wedge^{1/2} Q^T\\)\u3002</p> \u4eff\u5c04\u53d8\u6362\u5bf9\u5e94\u7684 <code>computeCov3D</code> \u51fd\u6570\u4ee3\u7801 <p>\u4ee3\u7801 <code>forward.cu</code> \u4e2d\u7684 <code>computeCov3D</code> \u51fd\u6570\u8bb2\u7684\u5c31\u662f\u8fd9\u4e2a\u4eff\u5c04\u53d8\u6362\uff0c<code>scale</code> \u5373\u4e3a\u4e0a\u8ff0 \\(x\\)\uff0c <code>float* cov3D</code> \u5219\u7528\u4ee5\u5b58\u50a8\u534f\u65b9\u5dee\u77e9\u9635\uff0c\u53ea\u662f\u4f20\u5165\u7684 <code>glm:vec4 rot4</code> \u56db\u5143\u6570\u4f7f\u5f97\u4ee3\u7801\u591a\u4e86\u4e00\u4e2a\u8ba1\u7b97\u65cb\u8f6c\u77e9\u9635\u7684\u8fc7\u7a0b\u3002</p> <pre><code>// Forward method for converting scale and rotation properties of each\n// Gaussian to a 3D covariance matrix in world space. Also takes care\n// of quaternion normalization.\n__device__ void computeCov3D(const glm::vec3 scale, float mod, const glm::vec4 rot, float* cov3D)\n{\n    // Create scaling matrix\n    glm::mat3 S = glm::mat3(1.0f);\n    S[0][0] = mod * scale.x;\n    S[1][1] = mod * scale.y;\n    S[2][2] = mod * scale.z;\n\n    // Normalize quaternion to get valid rotation\n    glm::vec4 q = rot;// / glm::length(rot);\n    float r = q.x;\n    float x = q.y;\n    float y = q.z;\n    float z = q.w;\n\n    // Compute rotation matrix from quaternion\n    glm::mat3 R = glm::mat3(\n        1.f - 2.f * (y * y + z * z), 2.f * (x * y - r * z), 2.f * (x * z + r * y),\n        2.f * (x * y + r * z), 1.f - 2.f * (x * x + z * z), 2.f * (y * z - r * x),\n        2.f * (x * z - r * y), 2.f * (y * z + r * x), 1.f - 2.f * (x * x + y * y)\n    );\n\n    glm::mat3 M = S * R;\n\n    // Compute 3D world covariance matrix Sigma\n    glm::mat3 Sigma = glm::transpose(M) * M;\n\n    // Covariance is symmetric, only store upper right\n    cov3D[0] = Sigma[0][0];\n    cov3D[1] = Sigma[0][1];\n    cov3D[2] = Sigma[0][2];\n    cov3D[3] = Sigma[1][1];\n    cov3D[4] = Sigma[1][2];\n    cov3D[5] = Sigma[2][2];\n}\n</code></pre>"},{"location":"3DGS/3DGS/#_2","title":"\u629b\u96ea\u7403\uff1a\u4e3a\u900f\u89c6\u53d8\u6362\u5f15\u5165\u96c5\u53ef\u6bd4","text":"<p>\u5bf9\u975e\u7ebf\u6027\u53d8\u6362\u7684\u5c40\u90e8\u7ebf\u6027\u8fd1\u4f3c</p> <pre><code>// Forward version of 2D covariance matrix computation\n__device__ float3 computeCov2D(const float3&amp; mean, float focal_x, float focal_y, float tan_fovx, float tan_fovy, const float* cov3D, const float* viewmatrix)\n{\n    // The following models the steps outlined by equations 29\n    // and 31 in \"EWA Splatting\" (Zwicker et al., 2002). \n    // Additionally considers aspect / scaling of viewport.\n    // Transposes used to account for row-/column-major conventions.\n    float3 t = transformPoint4x3(mean, viewmatrix);\n\n    const float limx = 1.3f * tan_fovx;\n    const float limy = 1.3f * tan_fovy;\n    const float txtz = t.x / t.z;\n    const float tytz = t.y / t.z;\n    t.x = min(limx, max(-limx, txtz)) * t.z;\n    t.y = min(limy, max(-limy, tytz)) * t.z;\n\n    glm::mat3 J = glm::mat3(\n        focal_x / t.z, 0.0f, -(focal_x * t.x) / (t.z * t.z),\n        0.0f, focal_y / t.z, -(focal_y * t.y) / (t.z * t.z),\n        0, 0, 0);\n\n    glm::mat3 W = glm::mat3(\n        viewmatrix[0], viewmatrix[4], viewmatrix[8],\n        viewmatrix[1], viewmatrix[5], viewmatrix[9],\n        viewmatrix[2], viewmatrix[6], viewmatrix[10]);\n\n    glm::mat3 T = W * J;\n\n    glm::mat3 Vrk = glm::mat3(\n        cov3D[0], cov3D[1], cov3D[2],\n        cov3D[1], cov3D[3], cov3D[4],\n        cov3D[2], cov3D[4], cov3D[5]);\n\n    glm::mat3 cov = glm::transpose(T) * glm::transpose(Vrk) * T;\n\n    return { float(cov[0][0]), float(cov[0][1]), float(cov[1][1]) };\n}\n</code></pre> <p>\u96ea\u7403\u6709\u591a\u5927\u3001\u6709\u591a\u91cd</p>"},{"location":"3DGS/3DGS/#_3","title":"\u96ea\u7403\u989c\u8272\uff1a","text":"<ol> <li> <p>3D\u9ad8\u65af\u573a\u666f\u8868\u793a: \u6bcf\u4e2a\u9ad8\u65af\u6a21\u578b\u7531xyz\u4f4d\u7f6e\u3001\u5404\u65b9\u5411\u7f29\u653e\u7684\u534f\u65b9\u5dee\u77e9\u9635\u3001RGB \u989c\u8272\u548c\u900f\u660e\u5ea6\\(\\alpha\\)\u56db\u4e2a\u53c2\u6570\u6765\u8868\u8ff0, \u901a\u8fc7\u4ece\u6700\u521dSfM\u5f97\u5230\u7684\u7a00\u758f\u70b9\u4e91\u8fdb\u884c\u521d\u59cb\u5316, \u591a\u4e2a\u9ad8\u65af\u6a21\u578b\u5171\u540c\u6784\u6210\u4e86\u6574\u4e2a\u573a\u666f\u7684\u8fde\u7eed\u4f53\u79ef\u8868\u793a. \"We choose 3D Gaussians, which are differentiable and can be easily projected to 2D splats allowing fast \\(\\alpha\\)-blending for rendering\", \u4e5f\u5c31\u662f\u8bf4, 3D\u9ad8\u65af\u8fd9\u79cd\u663e\u5f0f\u8868\u793a\u7684\u57fa\u5143\u7ee7\u627f\u53ef\u5fae\u5206\u4f53\u79ef\u8868\u793a\u7684\u5c5e\u6027, \u76f8\u6bd4\u8d77NeRF\u901a\u8fc7Ray-cast\u65b9\u6cd5\u7d2f\u79ef\u989c\u8272\u548c\u4e0d\u900f\u660e\u5ea6\u7684backward mapping\u8fc7\u7a0b, 3D\u9ad8\u65af\u6cfc\u6e85\u5219\u662f\u57fa\u4e8eobject-order\u7b97\u6cd5\u7684forward mapping\u8fc7\u7a0b.</p> </li> <li> <p>\u81ea\u9002\u5e94\u5bc6\u5ea6\u63a7\u5236\u4e0e\u4f18\u5316: \u5bf9\u900f\u660e\u7684\u9ad8\u65af\u5206\u5e03\u4f5c\u5468\u671f\u6027\u6ee4\u9664. \u540c\u65f6, \u5bf9\u4e8eunder-reconstruction\u7684\u6b20\u91cd\u5efa\u533a\u57df, \u514b\u9686\u9ad8\u65af\u5e76\u6cbf\u7740\u68af\u5ea6\u65b9\u5411\u79fb\u52a8\u4ee5\u8986\u76d6\u51e0\u4f55\u4f53; \u5bf9\u4e8eover-reconstruction\u7684\u8fc7\u91cd\u5efa\u533a\u57df\u5219\u62c6\u5206\u9ad8\u65af\u4ee5\u66f4\u597d\u5730\u62df\u5408\u7ec6\u7c92\u5ea6\u7ec6\u8282.</p> </li> <li> <p>\u5feb\u901f\u5149\u6805\u5316: 3D\u9ad8\u65af\u7684\u8f74\u5411\u79ef\u5206\u7b49\u540c\u4e8e2D\u9ad8\u65af, \u8fd9\u4ece\u6570\u5b66\u5c42\u9762\u6446\u8131\u4e86\u91c7\u6837\u91cf\u7684\u9650\u5236, \u8ba1\u7b97\u91cf\u7531\u9ad8\u65af\u6570\u91cf\u51b3\u5b9a, \u800c\u9ad8\u65af\u53c8\u53ef\u4ee5\u4f7f\u7528\u5149\u6805\u5316\u7ba1\u7ebf\u5feb\u901f\u5e76\u884c\u6e32\u67d3.</p> </li> </ol> <p>[1] Kerbl B, Kopanas G, Leimk\u00fchler T, et al. 3D Gaussian splatting for real-time radiance field rendering[J]. ACM Trans. Graph., 2023, 42(4): 139:1-139:14.</p> <p>[2] Bilibili\u4e0a\u7684\u8fd9\u4e2a\u89c6\u9891\u7ed9\u51fa\u4e863DGS\u4eba\u6027\u5316\u7684\u8bb2\u89e3\uff0c\u540c\u65f6\u4e5f\u662f\u6211\u8fd9\u7bc7\u7b14\u8bb0\u7684\u6765\u6e90\u3002</p>"},{"location":"decode/Overview/","title":"Decode Workflow","text":"<p>OTA \u9700\u8981\u89e3\u6790 CAN \u603b\u7ebf\u62a5\u6587\u4e2d\u6240\u542b\u673a\u5668\u4eba\u7684\u5404\u9879\u6570\u636e\uff0c\u5e76\u9884\u6d4b\u51fa\u673a\u5668\u4eba\u7684\u5269\u4f59\u5bff\u547d\uff0c\u603b\u6d41\u7a0b\u5982\u4e0b\u56fe\u6240\u793a\u3002\u5982\u6b64\u7c97\u7c97\u4e00\u77a5\uff0c\u9879\u76ee\u4ee3\u7801\u7684\u8f93\u5165\u548c\u8f93\u51fa\u4f3c\u662f\u660e\u4e86\uff1a\u8f93\u5165\u81ea\u7136\u5c31\u662f <code>CAN_PATH</code> \u4e0b\u4f20\u5165\u7684 CAN \u603b\u7ebf\u6570\u636e\uff0c\u8f93\u51fa\u5373\u4e3a POST \u5230\u8fdc\u7aef\u670d\u52a1\u5668\u7684\u6d88\u606f\u6587\u672c\u3002\u7136\u800c\uff0c\u7ec6\u7ec6\u8bfb\u8fc7\u524d\u4eba\u7684\u4ee3\u7801\u4fbf\u4f1a\u53d1\u73b0\uff0c\u5176\u4e2d\u6570\u636e\u6d41\u4ea4\u4e92\u76d8\u6839\u9519\u8282\uff0c\u9762\u5411\u8fc7\u7a0b\u7f16\u7a0b\u5bfc\u81f4\u9879\u76ee\u7ed3\u6784\u81c3\u80bf\u3001\u4ee3\u7801\u5806\u780c\uff0c\u66f4\u6709\u751a\u8005\u4e00\u4e2a\u51fd\u6570\u4f20\u5165\u516d\u4e2a\u53c2\u6570\u2014\u2014\u5982\u679c\u5728\u6b64\u57fa\u7840\u4e0a\u7ee7\u7eed\u5b9e\u73b0\u66f4\u591a\u529f\u80fd\u7684\u8bdd\uff0c\u53ea\u662f\u5728\u4e00\u5806\u7cdf\u7cd5\u7684\u4ee3\u7801\u4e0a\u5199\u4e86\u4e00\u6bb5\u540c\u6837\u7cdf\u7cd5\u7684\u4ee3\u7801\uff0c\u56e0\u4e3a\u5f53\u96ea\u5d29\u6765\u4e34\u65f6\uff0c\u6ca1\u6709\u4e00\u6735\u96ea\u82b1\u4f1a\u662f\u65e0\u8f9c\u7684\u3002</p> <p>\u6700\u8ba9\u4eba\u75db\u5fc3\u75be\u9996\u7684\u662f Whole Picture \u7684\u7f3a\u5931\uff1a\u9700\u8981\u94ed\u8bb0\u4e8e\u5fc3\u7684\u4e00\u70b9\u5728\u4e8e\uff0c\u9879\u76ee\u4ee3\u7801\u662f\u7ed9\u522b\u4eba\u770b\u7684\uff0c\u5982\u679c\u8fde\u4f5c\u8005\u90fd\u8981\u5728\u6563\u843d\u4e00\u5730\u800c\u65e0\u6ce8\u91ca\u7684\u51fd\u6570\u4e2d\u82e6\u82e6\u5bfb\u89c5\u86db\u4e1d\u9a6c\u8ff9\u624d\u80fd\u7406\u89e3\u8fd9\u4e2a\u51fd\u6570\uff0c\u53c8\u8c08\u4f55\u5728\u6b64\u57fa\u7840\u4e0a\u4f5c\u4e8c\u6b21\u5f00\u53d1\u5462\uff1f\u53c8\u8c08\u4f55\u6839\u636e\u65e5\u5fd7 log \u6587\u4ef6\u5feb\u901f\u5730 debug \u5462\uff1f\u4ece\u6b64 Python \u6ca6\u4e3a\u6240\u8c13\u7684\u5de5\u5177\u800c\u518d\u65e0\u7b80\u6d01\u548c\u53ef\u8bfb\u6027\u53ef\u8a00\uff0c\u8fd9\u4e5f\u662f\u6211\u7ed8\u5236\u8fd9\u5e45\u56fe\u7684\u521d\u8877\uff1a\u9762\u5411\u5bf9\u8c61\u548c\u6a21\u5757\u5316\u7f16\u7a0b\u3002</p> <p></p> <ol> <li> <p>\u6587\u4ef6\u4f20\u5165\u76d1\u6d4b\u3002\u4ece\u62a5\u6587\u6570\u636e\u4f20\u5165\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u9996\u5148\u81ea\u7136\u9700\u8981\u6784\u5efa\u4e00\u4e2a\u6587\u4ef6\u76d1\u89c6\u5668\uff0c\u5982\u5f15\u5165 <code>watchdog.observers</code> \u4e2d\u7684 <code>Observer()</code> \u5bf9\u8c61\u7528\u4e8e\u5224\u65ad\u662f\u5426\u6709\u6587\u4ef6\u79fb\u5165 <code>data_folder</code> \u6587\u4ef6\u5939\uff0c\u5982\u6709\u5219\u89e6\u53d1\u6587\u4ef6\u5904\u7406\u51fd\u6570 <code>process_file(can_data_file_path)</code>\u3002\u5982\u679c\u719f\u6089 ROS \u7684\u8bdd\uff0c\u4f1a\u53d1\u73b0\u8fd9\u7c7b\u4f3c\u4e8e\u8ba2\u9605\u8005\u8282\u70b9 <code>while (ros::ok()) {ros::spin(); }</code> \u7684\u76d1\u542c\u64cd\u4f5c\u3002</p> </li> <li> <p>\u6587\u4ef6\u540d\u53c2\u6570\u63d0\u53d6\u53ca CAN \u603b\u7ebf\u6570\u636e\u89e3\u7801\u3002\u5728\u7740\u624b CAN \u6570\u636e\u500d\u9891\u3001\u8d85\u8c03\u5206\u6790\u53ca\u5269\u4f59\u5bff\u547d\u9884\u6d4b\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u4ece\u91c7\u96c6\u7684\u62a5\u6587\uff0c\u5982 <code>'CAN1_12,TX,ExtID,0x602000,990880491,x| 00 0f 78 80 db 34 82 76'</code> \u4e2d\u89e3\u6790\u51fa\u63a7\u5236\u5668\u548c\u673a\u5668\u4eba\u72b6\u6001\u4fe1\u606f\uff0c\u6bd4\u5982\u5176\u5c5e\u4e8e\u547d\u4ee4\u3001\u53cd\u9988\u548c\u9519\u8bef\u7c7b\u578b\u7684\u54ea\u4e00\u79cd\u3001JKS \u7a0b\u5e8f\u7684\u8fd0\u884c\u884c\u53f7\uff0c\u4ee5\u53ca\u5173\u8282\u89d2\u548c\u53cc\u7f16\u7801\u5668\u6570\u636e\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u6709\u4e9b\u7c7b\u4f3c\u4e8e\u5728\u548c\u5916\u56fd\u670b\u53cb\u4ea4\u8c08\u65f6\uff0c\u8111\u5b50\u91cc\u9700\u8981\u5c06\u542c\u5230\u7684\u82f1\u6587\u5148\u7ffb\u8bd1\u6210\u4e2d\u6587\u3002</p> </li> <li> <p>\u6839\u636e <code>FilenameInfo</code> \u548c <code>CanData</code> \u8ba1\u7b97\u7528\u6237\u9700\u8981\u7684\u672b\u7aef\u4f4d\u59ff <code>XYZ + RPY</code>\uff0c\u53cd\u9988\u5173\u8282\u89d2\u500d\u9891\u3001\u53cc\u7f16\u7801\u5668\u5dee\u503c\u3001\u8d85\u8c03\u91cf\u548c\u7a33\u5b9a\u65f6\u95f4\u89e3\u6790\uff0c\u4ee5\u53ca\u5065\u5eb7\u6307\u6570\u548c\u5269\u4f59\u5bff\u547d\u9884\u6d4b\u3002\u5176\u4e2d\u524d\u4e24\u8005\u88ab\u5c01\u88c5\u5728 <code>can_analysis_functions.py</code> \u6587\u4ef6\u4e2d\uff0c\u800c\u540e\u8005\u8fd8\u672a\u5b9e\u73b0\u3002</p> </li> <li> <p>\u89e3\u6790\u8f93\u51fa\u3002\u672b\u7aef\u4f4d\u59ff\u88ab\u5199\u5165\u5230 csv \u6587\u4ef6\u4e2d\uff0c\u53cd\u9988\u5173\u8282\u89d2\u500d\u9891\u5e45\u503c\u3001\u53cc\u7f16\u7801\u5668\u5dee\u503c\u7ea7\u5dee\u7b49\u6570\u636e\u5219\u4ee5 <code>JSON</code> \u952e\u503c\u5bf9\u7684\u5f62\u5f0f\u88ab\u53d1\u9001\u5230\u670d\u52a1\u5668\u3002\u5982\u679c\u6cbf\u7528\u4e4b\u524d\u6bd4\u55bb\u7684\u8bdd\uff0c\u4e5f\u5c31\u662f\u8bf4\u5728 3 \u4e2d\u601d\u8003\u5b8c\u5916\u56fd\u670b\u53cb\u7684\u8bed\u4e49\u540e\uff0c\u5c06\u81ea\u5df1\u7684\u610f\u601d\u4ee5\u82f1\u6587\u53e3\u8bed\u5f62\u5f0f\u53cd\u9988\u7ed9\u5bf9\u65b9\u3002</p> </li> </ol>"},{"location":"decode/Overview/#code-structure","title":"Code Structure","text":"<p>\u4e4b\u6240\u4ee5\u8981\u5f3a\u8c03\u4ee3\u7801\u67b6\u6784\uff0c\u662f\u56e0\u4e3a\u5f53\u4f60\u53d1\u73b0\u4e00\u68f5\u6811\u7ed3\u51fa\u7684\u679c\u5b9e\u4e0d\u518d\u53ef\u53e3\u65f6\uff0c\u8fd9\u53ef\u80fd\u4e0d\u662f\u67d0\u4e2a\u679d\u6761\u7684\u9519\u8bef\uff0c\u800c\u662f\u56e0\u4e3a\u8fd9\u68f5\u6811\u7684\u6839\u5df2\u7ecf\u6e83\u70c2\u4e86\u3002\u867d\u7136 OTA \u7684\u601d\u8def\u5e76\u4e0d\u590d\u6742\uff0c\u4f46\u662f\u4f5c\u4e3a\u4e00\u4e2a\u9879\u76ee\uff0c\u5982\u679c\u4e3b\u7a0b\u5e8f <code>main.py</code> \u51e0\u767e\u884c\u4ee3\u7801\u4e2d\u5404\u4e2a\u6570\u636e\u89e3\u6790\u51fd\u6570\u3001\u5de5\u5177\u7c7b\u3001\u914d\u7f6e\u53c2\u6570\u5168\u5806\u5728\u4e00\u8d77\uff0c\u5982\u679c\u4ee3\u7801\u7ed3\u6784\u6ca1\u6709 <code>module</code> \u5206\u5c42\u3001\u6ca1\u6709\u660e\u786e\u7684\u804c\u8d23\u5212\u5206\u3001\u4e5f\u6ca1\u6709 <code>pytest</code> \u6d4b\u8bd5\u6216\u6587\u6863\u652f\u6301\uff0c\u4e00\u4e2a\u529f\u80fd\u4ece\u5934\u5199\u5230\u5c3e\u7684\u8bdd\uff0c\u4e00\u65e6\u9700\u8981\u5f00\u59cb\u505a\u70b9\u201c\u7cfb\u7edf\u5316\u201d\u7684\u4e8b\u60c5\uff0c\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\u3001\u53ef\u7ef4\u62a4\u6027\u3001\u53ef\u6269\u5c55\u6027\u90fd\u4f1a\u8fc5\u901f\u5d29\u584c\u3002</p> <p>\u8fd9\u91cc\u91c7\u7528\u7684\u662f\u201c\u7709\u6e05\u76ee\u79c0\u201d\u7684 <code>src</code> \u7ed3\u6784<sup>1,</sup><sup>2</sup>\uff0c\u5176\u4e2d <code>data</code> \u4e3a\u7edf\u4e00\u7684\u8f93\u5165\u8f93\u51fa\u76ee\u5f55\uff0c\u7528\u4e8e\u5b58\u653e\u6837\u4f8b\u6570\u636e\u548c\u8fd0\u884c\u7ed3\u679c\uff0c <code>src</code> \u76ee\u5f55\u5305\u542b\u6838\u5fc3\u7684\u4e1a\u52a1\u903b\u8f91\u4ee3\u7801\uff0c<code>tests</code> \u6587\u4ef6\u5939\u4e2d\u7ed9\u51fa\u4e86\u5bf9\u5e94\u529f\u80fd\u7684\u6d4b\u8bd5\u7528\u4f8b\uff0c <code>scripts</code> \u6587\u4ef6\u5939\u5219\u7528\u4e8e\u5b58\u653e\u811a\u672c\u6267\u884c\u5165\u53e3\u3001\u5b9e\u9a8c\u8c03\u8bd5\u5de5\u5177\u7b49\u3002\u4e0d\u8fc7\u5bf9\u4e8e <code>ota/src/decode</code> \u4e0b <code>visualization.py</code> \u7b49\u51fd\u6570\u7684\u4f4d\u7f6e\u662f\u5426\u59a5\u5f53\uff0c<code>ota/config/Config.py</code> \u914d\u7f6e\u6587\u4ef6\u662f\u5426\u5e94\u6539\u4e3a <code>YAML</code> \u7b49\u5916\u90e8\u914d\u7f6e\u6587\u4ef6\u7684\u683c\u5f0f\u4ee5\u9002\u5e94\u4e0d\u540c\u4e8e python \u7684\u7cfb\u7edf\u8bf8\u5982\u6b64\u7c7b\u7684\u4e8b\u60c5\u8fd8\u9700\u659f\u914c\u3002\u5982\u679c\u540e\u7eed\u8fd8\u6709\u540c\u4e8b\u9700\u8981\u5728\u6b64\u57fa\u7840\u4e0a\u4f5c\u4e8c\u6b21\u5f00\u53d1\uff0c\u6bd4\u5982\u5269\u4f59\u5bff\u547d\u9884\u6d4b\u7684\u8bdd\uff0c\u4ece\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u7684\u89d2\u5ea6\uff0c\u53ef\u4ee5\u6309\u7167\u5176\u9700\u6c42\u5728\u7c7b\u4e2d\u6dfb\u52a0\u65b0\u65b9\u6cd5\u6216\u8005\u5c01\u88c5\u65b0\u7684\u7c7b\uff1b\u4ece\u4ee3\u7801\u67b6\u6784\u7684\u89d2\u5ea6\uff0c\u5219\u53ef\u4ee5\u5728 <code>src</code> \u6587\u4ef6\u5939\u4e0b\u5199\u65b0\u7684 <code>package</code>\u3002</p> <pre><code>ota\n\u251c\u2500\u2500 config\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 Config.py\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 robot.json\n\u251c\u2500\u2500 data\n\u2502   \u251c\u2500\u2500 input\n\u2502   \u2502   \u251c\u2500\u2500 HF-Zu7250213-20250723-2_Zu7250213_0_JK_PROD_Zu3 J1 10 \u500d\u9891\u5206\u6790.jks_e2b8e40345a53855e739eb1c1d5b1cf1.tar.gz\n\u2502   \u2502   \u251c\u2500\u2500 HF-Zu7250213-20250723-2_Zu7250213_0_JK_PROD_Zu3 J1 \u53cc\u7f16\u7801\u5668\u5dee\u503c.jks_ffeb8c0d0841a7c4b8ce39b5f94888bd.tar.gz\n\u2502\u00a0\u00a0 \u2502   \u2514\u2500\u2500 HF-Zu7250213-20250723-2_Zu7250213_0_JK_PROD_Zu3 J3 \u8d85\u8c03\u4e0e\u7a33\u5b9a\u65f6\u95f4.jks_a5bcbf20c1fbe41ea16ab9ec8bb951d4.tar.gz\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 output\n\u2502   \u251c\u2500\u2500 history\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 error\n\u251c\u2500\u2500 log\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 decode 2025-08-04.txt\n\u251c\u2500\u2500 src\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 main.py\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 decode\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 __init__.py\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 can_analysis_functions.py\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 CanDataLine.py\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 CanData.py\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 FilenameInfo.py\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 report_sender.py\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 visualization.py\n\u251c\u2500\u2500 tests\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 tests_data\n\u2502   \u2514\u2500\u2500 decode\n\u2502       \u251c\u2500\u2500 test_CanDataLine.py\n\u2502       \u251c\u2500\u2500 test_CanData.py\n\u2502       \u2514\u2500\u2500 test_FilenameInfo.py\n\u251c\u2500\u2500 document\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 docs\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 mkdocs.yml\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 site\n\u251c\u2500\u2500 scripts\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 bug_can_lines_read.py\n\u251c\u2500\u2500 requirements.txt\n\u2514\u2500\u2500 README.md\n</code></pre> <p>\u4e0a\u8ff0\u67b6\u6784\u770b\u4f3c\u5c06\u95ee\u9898\u590d\u6742\u5316\u4e86\uff0c\u5b9e\u5219\u4e0d\u7136\u3002\u5982\u679c\u53bb Github \u4e0a\u770b\u4e00\u770b Python \u7b2c\u4e09\u65b9\u5e93\uff0c\u5982 Flask \u6216\u8005\u5927\u578b\u7684\u6df1\u5ea6\u5b66\u4e60\u5f00\u6e90\u9879\u76ee\uff0c\u5982 MMDetection \u7684\u9879\u76ee\u76ee\u5f55\uff0c\u5c31\u4f1a\u53d1\u73b0\u5728\u5f00\u53d1\u4e2d\u4e0d\u5f97\u4e0d\u5bf9\u4ee3\u7801\u6846\u67b6\u6709\u6240\u8003\u8651\u3002\u8fd9\u6837\u7684\u597d\u5904\u5728\u4e8e\uff0c\u6211\u5982\u679c\u60f3\u77e5\u9053 CAN \u603b\u7ebf\u62a5\u6587\u5173\u8282\u89d2\u53cd\u9988\u884c\u7684\u6837\u5b50\uff0c\u4e0d\u5fc5\u50cf\u4ece\u524d\u4e00\u6837\u5728\u4e00\u5806\u51fd\u6570\u4e2d\u5bfb\u627e\u5173\u8282\u89d2\u53cd\u9988\u884c\u7684\u62a5\u6587\u89e3\u6790\u51fd\u6570\uff0c\u7136\u540e\u518d\u5728\u67d0\u4e2a\u7284\u89d2\u65ee\u65ef\u5904\u624b\u52a8 print\uff0c\u800c\u662f\u53ef\u4ee5\u5728 <code>src/decode/CanDataLine.py</code> \u8fd9\u4e2a\u7c7b\u4e0b\u8fc5\u901f\u627e\u5230\u53cd\u9988\u884c\u4e2d\u5404\u4e2a\u53c2\u6570\u7684\u542b\u4e49\uff0c\u5e76\u4e14\u5728\u5bf9\u5e94\u7684\u6d4b\u8bd5\u7528\u4f8b <code>tests/decode/test_CanDataLine.py</code> \u4e2d\u660e\u4e86\u5730\u770b\u5230\u5176\u8f93\u5165\u8f93\u51fa\uff0c\u540c\u65f6\u53ef\u4ee5\u5728 <code>scripts</code> \u6587\u4ef6\u5939\u4e0b\u627e\u5230\u9879\u76ee\u8c03\u8bd5\u5de5\u5177 <code>bug_can_lines_read.py</code> \u4ee5\u5728\u7ec8\u7aef\u4e2d\u53ef\u89c6\u5316\u62a5\u6587\u3002</p>"},{"location":"decode/Overview/#reference","title":"Reference","text":"<p>[1] \u77e5\u4e4e\uff1aPython \u9879\u76ee\u7684\u7ed3\u6784\u8bbe\u8ba1\u4e0e\u76ee\u5f55\u89c4\u8303 \u2014\u2014 \u4ece\u811a\u672c\u5230\u6a21\u5757\uff0c\u4ece\u6df7\u4e71\u5230\u6574\u6d01</p> <p>[2] Python \u9879\u76ee\u5de5\u7a0b\u5316\u5f00\u53d1\u6307\u5357 \u2014\u2014 \u9879\u76ee\u7ed3\u6784</p>"},{"location":"decode/Details/Can_Data_Analysis/","title":"Analysis for Frequency FFT","text":"<p>\u500d\u9891\u5206\u6790\u8ba4\u4e3a lq \u7535\u6d41\u53cd\u9988\u6570\u636e FFT \u53d8\u6362\u540e\u7684\u9891\u57df\u5e45\u503c\u4f53\u73b0\u4e86\u673a\u5668\u4eba\u5173\u8282\u7684\u5065\u5eb7\u72b6\u6001\u3002\u5c31\u4f3a\u670d\u4e0a\u4f4d\u673a\u8ba1\u7b97\u500d\u9891\u5bf9\u5e94\u7684\u5e45\u503c\u800c\u8a00\uff0c\u81ea\u7136\u53ea\u9700\u8981\u622a\u53d6\u5300\u901f\u6bb5\u540e\u70b9\u51fb\u201c\u9891\u57df\u663e\u793a\u201d\u7684\u6309\u94ae\u5373\u53ef\uff1b\u800c\u5bf9\u4e8e python \u7f16\u7a0b\u5b9e\u73b0\u800c\u8a00\uff0c\u8ba1\u7b97\u673a\u4e0d\u89c1\u5f97\u80fd\u50cf\u4eba\u4e00\u6837\u4e00\u773c\u8ba4\u51fa\u5300\u901f\u6bb5\uff0c\u6240\u4ee5\u8fd9\u91cc\u5b9a\u4e49\u5300\u901f\u6bb5\u4e3a lq \u7535\u6d41\u6570\u636e\u4e2d\u6700\u957f\u7684\u4e00\u6bb5\u8fde\u7eed\u7d22\u5f15\uff0c\u4f7f\u5f97\u5728\u8fd9\u6bb5\u7d22\u5f15\u4e2d lq \u7535\u6d41\u7684\u6781\u5dee\u5c0f\u4e8e\u67d0\u4e2a\u7ed9\u5b9a\u7684 epsilon \u2014\u2014 \u4f60\u6216\u8bb8\u4e5f\u4f1a\u53d1\u73b0 epsilon \u5176\u5b9e\u662f\u4e0d\u592a\u597d\u786e\u5b9a\u7684\u53c2\u91cf\uff0c\u6bd5\u7adf\u4e0d\u540c\u5173\u8282\u6570\u636e\u7684\u566a\u58f0\u5e45\u503c\u662f\u4e0d\u540c\u7684\uff0c\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48\u6211\u5728\u641c\u7d22\u6700\u957f\u5300\u901f\u6bb5\u4e4b\u524d\u5148\u5bf9\u6570\u636e\u4f5c\u4e86\u4e24\u6b21 Savitzky-Golay \u6ee4\u6ce2\uff0c\u4ece\u800c\u8ba9 epsilon \u7684\u9009\u53d6\u53ef\u4ee5\u8db3\u591f\u5c0f\uff0c\u540c\u65f6\u4e0d\u81f3\u4e8e\u4e0e\u6781\u5dee\u7684\u9009\u53d6\u4ea7\u751f\u51b2\u7a81\u4ee5\u514d\u7a81\u53d8\u70b9\u88ab\u8bef\u8bc6\u522b\u8fdb\u5300\u901f\u6bb5\u3002</p> <p>\u8f83\u4e3a\u7406\u60f3\u7684\u6548\u679c\u5982\u4e0b\u6240\u793a\u3002\u65f6\u57df\u56fe\u50cf\u7684\u6b63\u786e\u6027\u7531\u89e3\u7801\u89c4\u5219\u4fdd\u8bc1\uff0c\u7ed9\u5b9a\u91c7\u6837\u9891\u7387\u540e lq \u7535\u6d41\u6570\u636e\u7684\u5355\u8fb9\u5e45\u503c\u8c31\u4e5f\u662f\u786e\u5b9a\u7684\uff0c\u7136\u800c\u7a0d\u7a0d\u4ed4\u7ec6\u4e00\u770b\u4fbf\u4f1a\u53d1\u73b0\uff0c\u5982\u679c\u622a\u53d6\u5300\u901f\u6bb5\u7684\u957f\u5ea6\u4e0d\u540c\uff0c\u500d\u9891\u5bf9\u5e94\u7684\u5e45\u503c\u4e5f\u4f1a\u6709\u6240\u5dee\u5f02\uff0c\u76ee\u524d\u521d\u6b65\u6bd4\u5bf9\u5f97\u5230\u7684\u7c97\u7cd9\u7ed3\u8bba\u662f\u4ee5\u4e0a\u4f4d\u673a\u624b\u52a8\u622a\u53d6\u5f97\u5230\u7684\u5e45\u503c\u7ed3\u679c\u4e3a\u57fa\u51c6\uff0cpython \u8ba1\u7b97\u51fa\u7684\u8bef\u5dee\u53ef\u4ee5\u8d85\u8fc7 25%\uff0c\u5177\u4f53\u89c1 <code>tests/decode/test_analysis_freq_fft.py</code> \u6d4b\u8bd5\u7528\u4f8b\u3002\u6240\u4ee5\u4e00\u4e2a\u5927\u6982\u7684\u611f\u89c9\u662f\uff0c\u500d\u9891\u5e45\u503c\u4e0d\u4f1a\u662f\u4e00\u4e2a\u7279\u522b\u9c81\u68d2\u7684\u7279\u5f81\uff0c\u5f53\u7136\u5982\u679c\u4e0d\u5173\u6ce8\u5177\u4f53\u6570\u503c\u5927\u5c0f\u6216\u8005\u80fd\u63d0\u53d6\u66f4\u7a33\u5b9a\u7684\u7279\u5f81\u5219\u53e6\u5f53\u522b\u8bba\u4e86\u3002</p> <p></p>"},{"location":"decode/Details/Can_Data_Analysis/#analysis-for-dual-difference","title":"Analysis for dual difference","text":""},{"location":"decode/Details/Can_Data_Analysis/#analysis-for-overshoot-and-steady-time","title":"Analysis for Overshoot and Steady Time","text":"<p>\u4e0b\u56fe\u7b97\u5f97\u7684\u8d85\u8c03\u91cf 0.0549 \u548c 0.0069 \u5747\u4e0e\u4f3a\u670d\u4e0a\u4f4d\u673a\u5c40\u90e8\u653e\u5927\u540e\u5f97\u5230\u7684\u7ed3\u679c\u76f8\u540c\uff0c\u4f46\u7a33\u5b9a\u65f6\u95f4\u5374\u975e\u5e38\u4ee4\u4eba\u7591\u60d1\uff1a\u5982\u679c\u5f53\u6307\u4ee4\u548c\u53cd\u9988\u5173\u8282\u89d2\u5c0f\u4e8e\u67d0\u4e2a\u9608\u503c\u65f6\uff0c\u6211\u4eec\u8ba4\u4e3a\u673a\u5668\u4eba\u5173\u8282\u8fd0\u52a8\u5b9e\u9645\u5df2\u7ecf\u7a33\u5b9a\uff0c\u90a3\u4e48\u8fd9\u4e2a\u9608\u503c\u8be5\u5982\u4f55\u9009\u53d6\u5462\uff1f\u6bd5\u7adf\u4e0d\u540c\u5173\u8282\u7684\u8d85\u8c03\u56fe\u50cf\u6709\u6240\u5dee\u5f02\uff0c\u5c31\u7b97\u5c06\u9608\u503c\u53d6\u4f5c\u8d85\u8c03\u91cf\u7684\u767e\u5206\u4e4b\u591a\u5c11\u7684\u8bdd\uff0c\u4f60\u4e5f\u5f88\u96be\u4fdd\u8bc1\u8fd9\u4e48\u505a\u786e\u5b9e\u662f\u5408\u7406\u7684\uff0c\u53c8\u6216\u8005\u8bf4\uff0c\u6211\u4eec\u8be5\u5982\u4f55\u4fdd\u8bc1\u8be5\u9608\u503c\u4e0b\u673a\u5668\u4eba\u5173\u8282\u786e\u5b9e\u7a33\u5b9a\u4e86\u5462\uff1f</p> <p></p>"},{"location":"decode/Details/Class_Encapsulation/","title":"Motivation","text":"<p>\u5728\u7740\u624b\u5206\u6790 CAN \u603b\u7ebf\u6570\u636e\u524d\uff0c\u9996\u5148\u9700\u8981\u5bf9\u5176\u89e3\u7801\u3002\u4e00\u5f00\u59cb\u662f\u611f\u89c9\u51fd\u6570\u4f20\u53c2\u8fc7\u591a\u6240\u4ee5\u60f3\u8981\u5c01\u88c5\u7c7b\u4f3c\u4e8e C \u8bed\u8a00\u4e2d\u7ed3\u6784\u4f53\u5f0f\u7684\u5bf9\u8c61\uff0c\u540e\u6765\u5219\u62bd\u8c61\u51fa <code>FilenameInfo</code>\u3001<code>CanDataLine</code>\u3001<code>CanData</code> \u8fd9\u4e09\u79cd\u7c7b\u3002\u5982\u6b64\u4e00\u65b9\u9762\uff0c\u7406\u6e05\u6570\u636e\u7ed3\u6784\u540e\u51fd\u6570\u4f20\u53c2\u4f1a\u66f4\u4e3a\u7b80\u6d01\uff0c\u800c <code>CanDataLine</code> \u4e0b\u7ee7\u627f\u7684\u4e09\u4e2a\u5b50\u7c7b <code>CanDataCmdFbLine</code>\u3001<code>CanDataDualDiffLine</code>\u3001<code>CanDataErrorLine</code> \u4f1a\u8ba9\u4ee3\u7801\u66f4\u4e3a\u660e\u4e86\u800c\u975e\u5199\u4e3a\u5206\u7acb\u7684\u4e09\u4e2a\u51fd\u6570\uff1b\u53e6\u4e00\u65b9\u9762\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u7c7b\u5728 <code>tests</code> \u6587\u4ef6\u5939\u4e0b\u90fd\u914d\u5907\u4e86\u5bf9\u5e94\u7684\u6d4b\u8bd5\u7528\u4f8b\uff0c\u8fd9\u53ef\u4ee5\u51cf\u8f7b\u5408\u4f5c\u7a0b\u5e8f\u5458\u7684\u7406\u89e3\u548c\u6d4b\u8bd5\u8d1f\u62c5\u3002\u66f4\u901a\u4fd7\u5730\u8bf4\uff0c\u6211\u4eec\u4e0d\u80fd\u8981\u6c42\u540e\u7eed\u5f00\u53d1\u8005\u53bb\u4e00\u5934\u96fe\u6c34\u5730\u7ffb\u770b\u6211\u4eec\u5199\u7684\u51fd\u6570\uff0c\u4ece\u4e3b\u7a0b\u5e8f\u7684\u5165\u53e3\u5f00\u59cb\u5f80\u524d\u8c03\u8bd5\u51fd\u6570\u7684\u611f\u89c9\u5c31\u548c\u4f60\u4ece\u6700\u540e\u4e00\u9875\u5f00\u59cb\u9605\u8bfb\u6559\u79d1\u4e66\u4e00\u6837\u7cdf\u7cd5\uff0c\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48\u6211\u8ba4\u4e3a\u5e94\u8be5\u7528\u7c7b\u8fd9\u6837\u4e00\u4e2a\u7c7b\u4f3c\u4e8e\u7ed3\u6784\u4f53\u7684\u6570\u636e\u7ed3\u6784\u6765\u8d2f\u7a7f\u9879\u76ee\uff0c\u51fd\u6570\u4f20\u53c2\u4e5f\u5e94\u5c3d\u53ef\u80fd\u7b80\u6d01\u5730\u4f20\u4e00\u4e2a\u7c7b\uff0c\u5982\u6b64\u4e00\u6765\u5bf9\u65b9\u53ea\u9700\u770b\u6587\u6863\u4e2d\u5bf9\u7c7b\u548c\u51fd\u6570\u7684\u63cf\u8ff0\u5373\u53ef\uff0c\u800c\u4e0d\u9700\u8981\u5728\u610f\u524d\u4eba\u7684\u5b9e\u73b0\u7ec6\u8282\u3002</p> <p>\u5982\u679c\u66f4\u4e3a\u7c97\u7cd9\u5730\u601d\u8003\u7c7b\u7684\u5c01\u88c5\u7684\u8bdd\uff0c\u8fd9\u4ef6\u4e8b\u5b9e\u9645\u4e0a\u5728\u8bf4\uff1a\u6211\u4eec\u662f\u5982\u4f55\u4ece\u63a7\u5236\u5668\u62a5\u6587\u89e3\u6790\u8fd9\u4e00\u8fc7\u7a0b\u4e2d\u62bd\u8c61\u51fa\u5408\u9002\u7684\u5bf9\u8c61\u4ee5\u652f\u6301\u7b80\u6d01\u7684\u4ee3\u7801\u91cd\u7528\u7684\u3002\u8fdb\u4e00\u6b65\u5730\uff0c\u7a0d\u5fae\u7ffb\u4e00\u4e0b\u6211\u7684\u4ee3\u7801\u4fbf\u4f1a\u53d1\u73b0\u5176\u4e2d\u7684\u5c42\u6b21\u7ed3\u6784\uff1a\u6bcf\u4e00\u884c\u62a5\u6587\u5206\u4e3a\u63a7\u5236\u53cd\u9988\u3001\u7f16\u7801\u5668\u5dee\u503c\u3001\u9519\u8bef\u884c\u4e09\u79cd\u7c7b\u578b\uff0c\u800c\u9664\u53bb\u5c3e\u90e8\u7684 Channel \u6570\u636e\uff0c\u62a5\u6587\u5934\u90e8\u7684 <code>time_stamp</code>\u3001<code>joint_index</code> \u5c5e\u6027\u5374\u662f\u7c7b\u4f3c\u7684\uff0c\u6240\u4ee5\u6211\u4ece <code>CanDataLine</code> \u7236\u7c7b\u4e2d\u7ee7\u627f\u4e86\u4e09\u4e2a\u5b50\u7c7b <code>CanDataCmdFbLine</code>\u3001<code>CanDataDualDiffLine</code>\u3001<code>CanDataErrorLine</code>\uff1b\u540c\u65f6\uff0c\u603b\u62a5\u6587\u6570\u636e <code>CanData</code> \u672c\u8eab\u4fbf\u662f\u7531 <code>CanDataLine</code> \u7ec4\u6210\u7684\uff0c\u6240\u4ee5\u521d\u59cb\u5316 <code>CanData</code> \u53ea\u9700\u8bfb\u53d6\u62a5\u6587\u6570\u636e\u7684\u6bcf\u4e00\u884c\u5e76\u5c06\u5176\u5c5e\u6027 append \u5230 <code>CanData</code> \u7684\u5c5e\u6027\u5373\u53ef\u3002</p>"},{"location":"decode/Details/Class_Encapsulation/#filenameinfo","title":"FilenameInfo","text":"<p>FilenameInfo \u4e2d\u5305\u542b OTA \u5f85\u5206\u6790\u6587\u4ef6\u540d\u4e2d\u5305\u542b\u7684\u673a\u5668\u4eba\u548c\u63a7\u5236\u67dc\u4fe1\u606f\u3002\u5bf9\u4e8e\u6587\u4ef6\u540d <code>'HF-Zu7250213-20250723-2_Zu7250213_0_JK_PROD_Zu3 J1 10 \u500d\u9891\u5206\u6790.jks_e2b8e40345a53855e739 eb1c1d5b1cf1.tar.gz'</code>\uff0c\u6709\u5982\u4e0b\u7ed3\u679c\u3002\u7c7b\u4ee3\u7801\u4e2d\u57fa\u672c\u90fd\u662f\u5b57\u7b26\u4e32\u7684 split \u64cd\u4f5c\uff0c\u56e0\u4e3a\u8fd9\u76f8\u6bd4\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d\u66f4\u4e3a\u76f4\u89c2\u7b80\u6d01\uff0c\u6bd5\u7adf <code>pattern = r'^(?P&lt;task_id&gt;[^_]+)_(?P&lt;robot_serial_number&gt;[^_]+)_(?P&lt;cabinet_serial_number&gt;[^_]+)_(?P&lt;joint&gt;.+?)_(?P&lt;md5&gt;[a-f0-9]+)\\.tar\\.gz$'</code> \u8fd9\u79cd\u7e41\u7410\u7684\u8868\u8fbe\u5f0f\u4ee3\u7801\u53ef\u8bfb\u6027\u662f\u6bd4\u8f83\u5dee\u7684\u3002</p> <p>Attributes of FilenameInfo</p> <ol> <li>task_id             -  str    -  \u4efb\u52a1ID                        -  <code>'HF-Zu7250213-20250723-2'</code></li> <li>robot_serial_num    -  str    -  \u673a\u5668\u4eba\u5e8f\u5217\u53f7                    -  <code>'Zu7250213'</code></li> <li>robot_id            -  int    -  \u8868\u793a\u673a\u5668\u4eba\u673a\u578b                  -  <code>725</code></li> <li>cabinet_serial_num  -  str    -  \u63a7\u5236\u67dc\u5e8f\u5217\u53f7                    -  <code>'0'</code></li> <li>joint_index         -  int    -  \u8868\u793a\u540e\u7eed\u9700\u8981\u5206\u6790\u5f53\u524d\u6570\u636e\u7684\u7b2c\u51e0\u5173\u8282  -   <code>1</code></li> <li>joint_speed_ratio   -  float  -  \u8868\u793a\u5173\u8282\u901f\u5ea6\u500d\u7387                 -  <code>0.1</code></li> <li>md5                 -  str    -  \u8868\u793aMD5\u7801                      -  <code>'82fc5d1689a4bbde7a7bc9f4df619a1a'</code></li> </ol>"},{"location":"decode/Details/Class_Encapsulation/#candataline","title":"CanDataLine","text":"<p>CanDataLine \u4ee3\u8868 CAN \u603b\u7ebf\u7684\u67d0\u4e00\u884c\u6570\u636e\uff0c\u5982 <code>'CAN1_12,TX,ExtID,0x602000,990880491,x| 00 0f 78 80 db 34 82 76'</code> \u4e2d\u5305\u542b\u7684\u5173\u8282\u72b6\u6001\u4fe1\u606f\u3002\u81f3\u4e8e\u7c7b\u65b9\u6cd5\u7684\u5177\u4f53\u5b9e\u73b0\uff0c\u5373\u5173\u8282\u4f4d\u7f6e\u3001\u626d\u77e9\u548c\u53cc\u7f16\u7801\u5668\u5dee\u503c\u6570\u636e\u4e3a\u4ec0\u4e48\u8fd9\u4e48\u89e3\u6790\u5219\u9700\u8981\u95ee\u4e00\u95ee\u5199\u63a7\u5236\u5668\u7684\u540c\u4e8b\u4e86\u3002</p> <p>Attributes of CanDataLine</p> <ol> <li>jks_line     -  str  -  JKS\u7a0b\u5e8f\u5f53\u524d\u8fd0\u884c\u7684\u884c\u53f7               -  <code>'12'</code></li> <li>time_stamp   -  int  -  \u62a5\u6587\u65f6\u95f4\u6233                         -  <code>990880491</code></li> <li>line_id      -  str  -  \u8be5\u884ccan\u6570\u636e\u7684ID\u503c                  -  <code>'0x602000'</code></li> <li>line_data    -  str  -  can\u603b\u7ebf\u8bb0\u5f55\u7684\u8be5\u884c\u5404\u4e2a\u901a\u9053\u7684\u6570\u636e       -  <code>'x| 00 0f 78 80 db 34 82 76'</code></li> <li>joint_index  -  int  -  \u8868\u793a\u8be5\u884c\u6570\u636e\u8bb0\u5f55\u7684\u662f\u54ea\u4e2a\u5173\u8282\u7684\u72b6\u6001\u4fe1\u606f  -  <code>0</code></li> </ol>"},{"location":"decode/Details/Class_Encapsulation/#candata","title":"CanData","text":"<p><code>CanData</code> \u8d1f\u8d23\u89e3\u7801\u673a\u5668\u4eba CAN \u603b\u7ebf .tar.gz \u6570\u636e\u6587\u4ef6\u4e2d\u7684 CAN \u603b\u7ebf\u65e5\u5fd7\u6587\u4ef6\uff0c\u5206\u7c7b\u63d0\u53d6\u547d\u4ee4\u3001\u53cd\u9988\u3001\u9519\u8bef\u548c\u53cc\u7f16\u7801\u5668\u6570\u636e\uff0c\u5176\u5c5e\u6027\u7684\u6570\u636e\u683c\u5f0f\u5747\u4e3a <code>List[List[Any]]</code>\uff0c\u5373 <code>[[Any] for i in range(0, 6)]</code>\u3002\u7c7b\u4e2d\u6709 <code>read_can_data_from_filepath</code> \u65b9\u6cd5\u662f\u56e0\u4e3a CanData \u9700\u8981\u4ece\u62a5\u6587\u6587\u4ef6\u4e2d\u8bfb\u53d6\u6bcf\u4e00\u884c\u7684 CanDataLine \u6570\u636e\uff0c\u6709 <code>align_attributes_to_shortest</code> \u65b9\u6cd5\u5219\u662f\u56e0\u4e3a\u63a7\u5236\u5668\u6781\u5c0f\u6982\u7387\u4f1a\u51fa\u73b0\u4e00\u884c\u53cd\u9988\u6307\u4ee4\u63a5\u6536\u7d0a\u4e71\u7684\u60c5\u51b5\u3002</p> <p>Attributes of CanData</p> <ol> <li>t_cmd / t_fb            -  \u6307\u4ee4 / \u53cd\u9988\u884c\u7684\u76f8\u5bf9\u65f6\u95f4\u6233   <code>[[0, 80, 162, 241, 321, ..., 187845, 187925, 188003, 188083], [...], [...], [...], [...], [...]]</code></li> <li>q_cmd / q_fb            -  \u6307\u4ee4 / \u53cd\u9988\u5173\u8282\u89d2         <code>[[1.572558007855984, ..., 1.572558007855984], [...], [...], [...], [...], [...]]</code></li> <li>torque_cmd / torque_fb  -  \u6307\u4ee4 / \u53cd\u9988\u626d\u77e9           <code>[[-0.0001220703125, -0.0001220703125, ..., -0.0, -0.0], [...], [...], [...], [...], [...]]</code></li> <li>dual_diff               -  \u53cc\u7f16\u7801\u5668\u5dee\u503c\u89d2\u5ea6           <code>[[0.0146484375, 0.0146484375, ..., 0.048828125, 0.048828125], [...], [...], [...], [...], [...]]</code></li> <li>jks_line                -  JKS\u7a0b\u5e8f\u6b63\u5728\u8fd0\u884c\u7684\u884c\u53f7      <code>[['0', '0', '0', ..., '0', '0'], [...], [...], [...], [...], [...]]</code></li> </ol> <p>\u5728 <code>scripts</code> \u6587\u4ef6\u5939\u4e0b\u6267\u884c <code>python check_can_lines.py</code> \u547d\u4ee4\u5373\u53ef\u5f97\u5230\u5982\u4e0b\u8f93\u51fa\uff0c\u4ece\u4e2d\u53ef\u4ee5\u770b\u51fa CAN \u603b\u7ebf\u62a5\u6587\u6570\u636e\u7684\u4e00\u822c\u89c4\u5f8b\uff1a\u5148\u662f\u516d\u4e2a\u5173\u8282\u89d2\u7684\u4e0b\u53d1\u63a7\u5236\u6307\u4ee4\uff0c\u518d\u662f\u4ea4\u66ff\u7684 <code>dual_diff</code> \u548c <code>feedback</code> \u53cd\u9988\u6570\u636e\u3002\u7136\u800c\u795e\u5947\u7684\u662f\uff0c26\u4e2a OTA \u62a5\u6587\u6587\u4ef6\u4e2d\u53ea\u6709\u8fd9\u4e2a\u62a5\u6587\u6587\u4ef6\u7684\u8be5\u8f6e\u53cd\u9988\u51fa\u73b0\u4e86 <code>dual_diff</code> \u591a\u53d1\u4e00\u884c\u800c <code>feedback</code> \u5c11\u53d1\u4e00\u884c\u7684\u60c5\u51b5\u3002\u5176\u4e2d\u7ec8\u7aef\u4e2d <code>None</code> \u884c\u5bf9\u5e94\u8be5\u62a5\u6587 ID \u4e0d\u5728\u8bc6\u522b\u5e8f\u5217\u4e2d\u7684\u60c5\u51b5\uff0c\u5982\u6709\u5fc5\u8981\u5219\u9700\u66f4\u65b0 <code>config/Config.py</code> \u6587\u4ef6\u4e2d\u7684 <code>JOINT_CAN_LINE_IDS</code> \u53c2\u6570\u3002</p> <p></p>"},{"location":"decode/Details/Class_Encapsulation/#reference","title":"Reference","text":"<p>[1] Google \u5f00\u6e90\u9879\u76ee Python \u98ce\u683c\u89c4\u8303\u3002\u5c31\u4e2a\u4eba\u800c\u8a00\uff0c\u6211\u8ba4\u4e3a\u4ece import package \u5f00\u59cb\uff0c\u6bcf\u4e00\u884c\u4ee3\u7801\u90fd\u9700\u8981\u975e\u5e38\u4e25\u683c\u5730\u9075\u5b88\u6b64\u89c4\u8303\uff0c\u6bd4\u5982\u5148 import \u6807\u51c6\u5e93\uff0c\u518d import \u7b2c\u4e09\u65b9\u5e93\uff0c\u6700\u540e import \u81ea\u5df1\u7684 module\uff0c\u53c8\u6bd4\u5982 Class \u7684\u547d\u540d\u5e94\u91c7\u53d6\u9a7c\u5cf0\u547d\u540d\u6cd5\uff1a\u8fd9\u4e9b\u663e\u7136\u90fd\u662f\u4ee3\u7801\u53ef\u8bfb\u7684\u524d\u63d0\u3002</p>"}]}